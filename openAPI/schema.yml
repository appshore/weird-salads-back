openapi: 3.0.0
info:
  title: Weird Salads API
  version: 1.0.0

servers:
  - url: "/api"

components:
  schemas:
    Staff:
      type: object
      x-tablename: staff
      properties:
        id:
          type: integer
          x-primary-key: true
          x-autoincrement: true
        name:
          type: string
        dob:
          type: string
        role:
          "$ref": "#/components/schemas/Role"
        iban:
          type: string
        bic:
          type: string

    Role:
      type: object
      x-tablename: role
      properties:
        id:
          type: integer
          x-primary-key: true
          x-autoincrement: true
        name:
          type: string

    Location:
      type: object
      x-tablename: location
      properties:
        id:
          type: integer
          x-primary-key: true
          x-autoincrement: true
        name:
          type: string
        address:
          type: string

    Ingredient:
      type: object
      x-tablename: ingredient
      properties:
        id:
          type: integer
          x-primary-key: true
          x-autoincrement: true
        name:
          type: string
        unit:
          type: string
        cost:
          type: number

    Modifier:
      type: object
      x-tablename: modifier
      properties:
        id:
          type: integer
          x-primary-key: true
          x-autoincrement: true
        name:
          type: string
        option:
          type: string
        price:
          type: number

    Recipe:
      type: object
      x-tablename: recipe
      properties:
        id:
          type: integer
          x-primary-key: true
          x-autoincrement: true
        name:
          type: string

    Menu:
      type: object
      x-tablename: menu
      properties:
        id:
          type: integer
          x-primary-key: true
          x-autoincrement: true
        recipe:
          "$ref": "#/components/schemas/Recipe"
        location:
          "$ref": "#/components/schemas/Location"
        price:
          type: number

paths:
  /staff:
    get:
      summary: Retrieve all staff
      operationId: "app.staff.get_all"
      tags:
        - "Staff"
      responses:
        "200":
          description: All staff retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Staff"

  /staff/{id}:
    get:
      summary: Retrieve staff profile by ID
      operationId: "app.staff.get_one"
      tags:
        - "Staff"
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Staff profile retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Staff"

  /ingredients:
    get:
      summary: Get all ingredients
      operationId: "app.ingredients.get_all"
      tags:
        - "Ingredients"
      responses:
        "201":
          description: All ingredients retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ingredient"
    post:
      summary: Create a new ingredient
      operationId: "app.ingredients.create_one"
      tags:
        - "Ingredients"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Ingredient"
      responses:
        "201":
          description: Ingredient created successfully

  /ingredients/{id}:
    get:
      summary: Get an ingredient by identifier
      operationId: "app.ingredients.get_one"
      tags:
        - "Ingredients"
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "201":
          description: All ingredients retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ingredient"

    put:
      summary: Update an ingredient
      operationId: "app.ingredients.update_one"
      tags:
        - "Ingredients"
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Ingredient"
      responses:
        "200":
          description: Ingredient updated successfully

  /recipes/{id}/check:
    get:
      summary: Check a recipe can be sold if associated ingredients and modifiers are available
      operationId: "app.recipes.check_one"
      tags:
        - "Recipes"
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Recipe is available

  /recipes/{id}/sell:
    put:
      summary: Sell a recipe (update ingredient inventory)
      operationId: "app.recipes.sell_one"
      tags:
        - "Recipes"
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Recipe sold successfully
